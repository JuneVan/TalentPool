@model PaginationModel<Une.TalentPool.Application.DailyStatistics.DailyStatisticDto>
@{
    ViewData["PageHeader"] = "日统计数据管理";
    ViewData["Title"] = "日统计数据列表";
}


<div class="row">
    <div class="col-12">
        @await Html.PartialAsync("Partials/_ActionPartial", new ActionViewModel("新增日数据", "/DailyStatistic/Create", Pages.DailyStatistic_CreateOrEditOrDelete, "btn-sm btn btn-primary", "fas fa-plus"))

        <button type="button" class="btn btn-sm btn-default" data-toggle="modal" data-target="#modal-default">
            <i class="fas fa-eye"></i>
            查看统计图
        </button>
    </div>
</div>

<div class="card mt-3">
    <div class="card-header">
        <h3 class="card-title">@ViewData["Title"]</h3>
    </div>
    <div class="card-body">

        <div class="row table-responsive">
            <div class="col-md-12">
                <table class="table table-hover  text-nowrap">
                    <thead>
                        <tr>
                            <th>统计日期</th>
                            <th>平台</th>
                            <th>创建时间</th>
                            <th>创建人</th>
                            <th>操作</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Items)
                        {
                            <tr>
                                <td>@(item.Date.ToString("yyyy年MM月dd日"))</td>
                                <td>@item.Platform</td>
                                <td>@item.CreationTime</td>
                                <td>@item.CreatorUserName</td>
                                <td>
                                    <div class="btn-group  btn-group-sm" role="group">
                                        <button id="group-dropdown" type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            <i class="fas fa-cog"></i> 操作菜单
                                        </button>
                                        <div class="dropdown-menu" aria-labelledby="group-dropdown">
                                            @await Html.PartialAsync("Partials/_ActionPartial", new ActionViewModel("编辑", "/DailyStatistic/Edit/" + item.Id, Pages.DailyStatistic_CreateOrEditOrDelete, "btn-sm btn btn-primary", "fas fa-plus"))
                                            @await Html.PartialAsync("Partials/_ActionPartial", new ActionViewModel("删除", "/DailyStatistic/Delete/" + item.Id, Pages.DailyStatistic_CreateOrEditOrDelete, "btn-sm btn btn-primary", "fas fa-plus"))
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        }

                    </tbody>
                </table>
            </div>
        </div>


    </div>
    <div class="card-footer">
        @await Html.PartialAsync("Partials/_PaginationPartial", Model)
    </div>
</div>


<!--统计图-->
<div class="modal fade" id="modal-default">
    <div class="modal-dialog  modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">日统计图</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="input-group">
                    <div class="input-group-append">
                        <button type="button" class="btn btn-default" id="dailyDaterangepicker">
                            <i class="far fa-calendar-alt"></i>
                        </button>
                    </div>
                    <input type="hidden" name="StartName" />
                    <input type="hidden" name="EndName" />
                    <select class="form-control" name="groupByKey">
                        <option value="Platform" selected>按平台分类</option>
                        <option value="Position">按职位分类</option>
                    </select>
                </div>
                <div class="tab-content p-0">
                    <div class="chart tab-pane active" id="update-chart" style="position: relative; height: 300px;">
                        <div class="chartjs-size-monitor">
                            <div class="chartjs-size-monitor-expand"><div class=""></div></div>
                            <div class="chartjs-size-monitor-shrink"><div class=""></div></div>
                        </div>
                        <canvas id="update-history-chart" style="min-height: 250px; height: 250px; max-height: 250px; max-width: 100%;"></canvas>
                    </div>
                    <div class="chart tab-pane" id="download-chart" style="position: relative; height: 300px;">
                        <div class="chartjs-size-monitor">
                            <div class="chartjs-size-monitor-expand">
                                <div class=""></div>
                            </div><div class="chartjs-size-monitor-shrink">
                                <div class=""></div>
                            </div>
                        </div>
                        <canvas id="download-history-chart" style="min-height: 250px; height: 250px; max-height: 250px; max-width: 100%;"></canvas>
                    </div>
                </div>
                <ul class="nav nav-pills ml-auto">
                    <li class="nav-item">
                        <a class="nav-link active" href="#update-chart" data-toggle="tab">更新量</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="#download-chart" data-toggle="tab">下载量</a>
                    </li>
                </ul>

            </div>
        </div>
    </div>
</div>

@section styles{
    <link href="~/lib/chart.js/Chart.min.css" rel="stylesheet" />
    <link href="~/lib/bootstrap-daterangepicker/daterangepicker.min.css" rel="stylesheet" />
}
@section scripts {
    <script src="~/lib/bootstrap-daterangepicker/moment.min.js"></script>
    <script src="~/lib/bootstrap-daterangepicker/daterangepicker.min.js"></script>
    <script src="~/lib/chart.js/Chart.min.js"></script>
    <script type="text/javascript">

        $(function () {

            function random() {
                return Math.floor((Math.random() * 255) + 1);
            }
            function randomColor() {
                return "rgb(" + random() + "," + random() + "," + random() + ")"
            }
            var startDate = moment().subtract(7, 'days').format("YYYY/MM/DD 00:00:00");
            var endDate = moment().format("YYYY/MM/DD 23:59:59");
            $("input[name='StartName']").val(startDate);
            $("input[name='EndName']").val(endDate);

            var groupByKey = $("select[name='groupByKey']").val();
            $("select[name='groupByKey']").change(function () {
                var start = $("input[name='StartName']").val();
                var end = $("input[name='EndName']").val();
                requestDailyStatistic(start, end, $("select[name='groupByKey']").val());
            })

            //构建折线统计
            function createLineChart(chartId, data) {
                var ticksStyle = {
                    fontColor: '#495057',
                    fontStyle: 'bold'
                };

                var mode = 'index';
                var intersect = true;
                var $chart = $(chartId);
                new Chart($chart, {
                    data: data,
                    options: {
                        maintainAspectRatio: false,
                        tooltips: {
                            mode: mode,
                            intersect: intersect
                        },
                        hover: {
                            mode: mode,
                            intersect: intersect
                        },
                        legend: {
                            display: true
                        },
                        scales: {
                            yAxes: [{
                                display: true,
                                gridLines: {
                                    display: true,
                                    lineWidth: '4px',
                                    color: 'rgba(0, 0, 0, .2)',
                                    zeroLineColor: 'transparent'
                                },
                                ticks: $.extend({
                                    beginAtZero: true
                                }, ticksStyle)
                            }],
                            xAxes: [{
                                display: true,
                                gridLines: {
                                    display: false
                                },
                                ticks: ticksStyle
                            }]
                        }
                    }
                })
            }


            $('#dailyDaterangepicker').daterangepicker({
                ranges: {
                    '最近7天': [moment().subtract(6, 'days'), moment()],
                    '最近30天': [moment().subtract(29, 'days'), moment()],
                    '这个月': [moment().startOf('month'), moment().endOf('month')],
                    '上个月': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
                },
                timePicker: false,
                locale: {
                    format: 'YYYY/MM/DD HH:mm',
                    applyLabel: '确定',
                    cancelLabel: '取消',
                    daysOfWeek: ['日', '一', '二', '三', '四', '五', '六'],
                    monthNames: ['一月', '二月', '三月', '四月', '五月', '六月',
                        '七月', '八月', '九月', '十月', '十一月', '十二月'],
                    firstDay: 1,
                    customRangeLabel: "自定义范围"
                },
                startDate: startDate,
                endDate: endDate
            }, function (start, end) {
                $("input[name='StartName']").val(start.format("YYYY/MM/DD 00:00:00"));
                $("input[name='EndName']").val(end.format("YYYY/MM/DD 00:00:00"));
                requestDailyStatistic(start.format("YYYY/MM/DD 00:00:00"), end.format("YYYY/MM/DD 00:00:00"), groupByKey);
            })


            function requestDailyStatistic(started, ended, groupByKey) {
                $.get("/DailyStatistic/GetChartData?startDate=" + started + "&endDate=" + ended + "&groupByKey=" + groupByKey, function (data) {
                    //下载统计
                    var downloadDataset = [];
                    for (var i = 0; i < data.downloadData.length; i++) {
                        var color = randomColor();
                        downloadDataset.push({
                            label: data.downloadData[i].label,
                            data: data.downloadData[i].values,
                            type: 'line',
                            backgroundColor: 'transparent',
                            borderColor: color,
                            pointBorderColor: "#FFF",
                            pointBackgroundColor: color,
                            pointRadius: 4,
                            fill: false,
                            borderWidth: 2,
                        });
                    }
                    createLineChart("#download-history-chart", {
                        labels: data.labels,
                        datasets: downloadDataset
                    });
                    //更新统计
                    var updateDataset = [];
                    for (var i = 0; i < data.updateData.length; i++) {
                        var color = randomColor();
                        updateDataset.push({
                            label: data.updateData[i].label,
                            data: data.updateData[i].values,
                            type: 'line',
                            backgroundColor: 'transparent',
                            borderColor: color,
                            pointBorderColor: "#FFF",
                            pointBackgroundColor: color,
                            pointRadius: 4,
                            fill: false,
                            borderWidth: 2,
                        });
                    }
                    createLineChart("#update-history-chart", {
                        labels: data.labels,
                        datasets: updateDataset
                    });
                })
            }
            requestDailyStatistic(startDate, endDate, "Platform");

        })

    </script>
}