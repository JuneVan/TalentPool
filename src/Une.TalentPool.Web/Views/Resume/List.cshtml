@using Une.TalentPool.Resumes

@inject IUserIdentifier UserIdentifier
@model Une.TalentPool.Web.Models.ResumeViewModels.QueryResumeViewModel
@{
    ViewData["PageHeader"] = "简历库管理";
    ViewData["Title"] = "简历列表";
}


<div class="row">
    <div class="col-12">
        @await Html.PartialAsync("Partials/_ActionPartial", new ActionViewModel("新增简历", "/Resume/Create", Pages.Resume_CreateOrEditOrDelete, "btn-sm btn btn-primary", "fas fa-plus"))
    </div>
</div>

<div class="card mt-3">
    <div class="card-header">
        <h3 class="card-title">@ViewData["Title"]</h3>
    </div>
    <div class="card-body">

        <form asp-action="List" method="get">
            <div class="row">
                <div class="col-md-3">
                    <div class="form-group">
                        <label>关键词</label>
                        <input type="text" class="form-control" placeholder="请输入姓名/手机号/简历编号" name="Keyword" value="@Model.Output.Parameter.Keyword">
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label>职位</label>
                        <input type="hidden" value="@Model.Output.Parameter.JobId" name="JobId">
                        <select class="form-control" id="selectJobId" asp-items="@Model.Jobs">
                            <option value="">==请选择职位==</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label>创建人</label>

                        <input type="hidden" value="@Model.Output.Parameter.CreatorUserId" name="CreatorUserId">
                        <select class="form-control" id="creatorUserIdBySelect" asp-items="@Model.Users">
                            <option value="">=请选择创建人=</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label>负责人</label>
                        <input type="hidden" value="@Model.Output.Parameter.OwnerUserId" name="OwnerUserId">
                        <select class="form-control" id="ownerUserIdBySelect" asp-items="@Model.Users">
                            <option value="@Guid.Empty">=请选择负责人=</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label>是否合适</label>
                        <input type="hidden" value="@Model.Output.Parameter.AuditStatus" name="AuditStatus">
                        <select class="form-control" id="auditStatusSelect" asp-items="@Html.GetEnumSelectList<AuditStatus>()">
                            <option value="">=请选择状态=</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label>创建时间</label>
                        <input type="text" class="form-control" placeholder="请选择创建时间" id="createdDaterangepicker">
                        <input type="hidden" value="@Model.Output.Parameter.StartTime" name="StartTime">
                        <input type="hidden" value="@Model.Output.Parameter.EndTime" name="EndTime">
                    </div>
                </div>

            </div>
            <div class="row m-2">
                <div class="col-md-12 text-right">
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-search"></i>
                        搜索
                    </button>

                    <button type="button" class="btn btn-danger" id="btnExport">
                        <i class="fas fa-file-export"></i>
                        导出
                    </button>
                </div>
            </div>
        </form>

        <div class="row table-responsive">
            <div class="col-md-12">
                <table class="table table-hover text-nowrap">
                    <thead>
                        <tr>
                            <th>姓名</th>
                            <th>职位</th>
                            <th>来源平台</th>
                            <th>平台ID</th>
                            <th>创建时间</th>
                            <th>创建人</th>
                            <th>负责人</th>
                            <th>审核状态</th>
                            <th>有效性</th>
                            <th>操作</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Output.Items)
                        {
                            <tr>
                                <td>@item.Name</td>
                                <td>@item.JobName</td>
                                <td>@item.PlatformName</td>
                                <td onclick="onCopy(this)" title="单击本区域，可复制平台ID" data-toggle="tooltip" data-placement="top">
                                    @item.PlatformId
                                </td>
                                <td>@item.CreationTime</td>
                                <td>@item.CreatorUserName</td>
                                <td>@item.OwnerUserName</td>
                                <td>
                                    @if (item.AuditStatus == AuditStatus.Ongoing)
                                    {
                                        <span class="badge badge-warning">
                                            审批中
                                        </span>
                                    }
                                    else if (item.AuditStatus == AuditStatus.Unpassed)
                                    {
                                        <span class="badge badge-danger">未通过</span>
                                    }
                                    else if (item.AuditStatus == AuditStatus.Complete)
                                    {
                                        <span class="badge badge-success">已通过</span>
                                    }
                                    else
                                    {
                                        <span class="badge badge-dark">未处理</span>
                                    }
                                </td>
                                <td>
                                    @if (item.Enable)
                                    {
                                        <span class="badge badge-success">
                                            <i class="fas fa-check"></i>
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="badge badge-danger" title="无效，@item.EnableReason" data-toggle="tooltip" data-placement="top">
                                            <i class="fas fa-times"></i>
                                        </span>
                                    }
                                </td>

                                <td>
                                    <div class="btn-group  btn-group-sm" role="group">
                                        <button id="group-dropdown" type="button" class="btn  btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            <i class="fas fa-cog"></i> 操作菜单
                                        </button>
                                        <div class="dropdown-menu" aria-labelledby="group-dropdown">

                                            @await Html.PartialAsync("Partials/_ActionPartial", new ActionViewModel("查看", "/Resume/View/" + item.Id, Pages.Resume, "dropdown-item", blank: true))
                                            @if (item.Enable)
                                            {
                                                @if (item.AuditStatus == AuditStatus.Complete)
                                                {
                                                    @await Html.PartialAsync("Partials/_ActionPartial", new ActionViewModel("重新分配负责人", "/Resume/Assign/" + item.Id, Pages.Resume_AssignUser, "dropdown-item"))
                                                    if (item.OwnerUserId == UserIdentifier.UserId && !string.IsNullOrEmpty(item.Name))
                                                    {
                                                        if (!item.InvestigationId.HasValue)
                                                        {
                                                            @await Html.PartialAsync("Partials/_ActionPartial", new ActionViewModel("添加调查", "/Investigation/Create/" + item.Id, Pages.Investigation_CreateOrEditOrDelete, "dropdown-item"))
                                                        }
                                                        @await Html.PartialAsync("Partials/_ActionPartial", new ActionViewModel("添加面试预约", "/Interview/Create/" + item.Id, Pages.Interview, "dropdown-item"))
                                                        @await Html.PartialAsync("Partials/_ActionPartial", new ActionViewModel("发送面试邀请", "/Resume/SendEmail/" + item.Id, Pages.Resume_SendEmail, "dropdown-item"))
                                                    }
                                                }
                                                else if (item.AuditStatus == AuditStatus.NoStart && item.OwnerUserId == UserIdentifier.UserId)
                                                {
                                                    //未处理状态可以删除
                                                    @await Html.PartialAsync("Partials/_ActionPartial", new ActionViewModel("删除", "/Resume/Delete/" + item.Id, Pages.Resume_CreateOrEditOrDelete, "dropdown-item"))
                                                }
                                                // 审核是可以回撤的，所以任何审核状态都可以审核
                                                @await Html.PartialAsync("Partials/_ActionPartial", new ActionViewModel("审核", "/Resume/Audit/" + item.Id, Pages.Resume_Audit, "dropdown-item"))

                                                if (item.OwnerUserId == UserIdentifier.UserId)
                                                {
                                                    @await Html.PartialAsync("Partials/_ActionPartial", new ActionViewModel("编辑", "/Resume/Edit/" + item.Id, Pages.Resume_CreateOrEditOrDelete, "dropdown-item"))
                                                }
                                                @if (item.InvestigationId.HasValue)
                                                {
                                                    @await Html.PartialAsync("Partials/_ActionPartial", new ActionViewModel("查看调查记录", "/Investigation/View/" + item.InvestigationId, Pages.Investigation, "dropdown-item"))
                                                }
                                                else
                                                {
                                                    if (item.OwnerUserId == UserIdentifier.UserId)
                                                    {
                                                        //无调查记录的情况下，才可以将简历设置无效
                                                        @await Html.PartialAsync("Partials/_ActionPartial", new ActionViewModel("设置无效", "/Resume/Trash/" + item.Id, Pages.Resume_CreateOrEditOrDelete, "dropdown-item"))
                                                    } 
                                                }
                                            }
                                        </div>
                                    </div>

                                </td>
                            </tr>
                        }

                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <div class="card-footer">
        @await Html.PartialAsync("Partials/_PaginationPartial", Model.Output)
    </div>
</div>
<blockquote class="quote-primary">
    <h3>简历处理规则</h3>
    <ol>
        <li>新创建的简历需进行审批，审批流程中的状态为审批中、合格\不合；</li>
        <li>审批通过的简历必须先编辑才能进行调查、预约面试、发送面试邀请；</li>
        <li>未审核的简历，才可以由处理人删除；</li>
        <li>无调查记录的简历才可以被设置成无效状态；</li>
    </ol>
</blockquote>
@section styles{
    <link href="~/lib/bootstrap-daterangepicker/daterangepicker.min.css" rel="stylesheet" />

}
@section scripts {
    <script src="~/lib/bootstrap-daterangepicker/moment.min.js"></script>
    <script src="~/lib/bootstrap-daterangepicker/daterangepicker.min.js"></script>
    <script>
        $(function () {

            //职位
            $("#selectJobId").val($("input[name='JobId']").val());
            $("#selectJobId").change(function () {
                $("input[name='JobId']").val($("#selectJobId").val());
            })
            //负责人
            $("#creatorUserIdBySelect").val($("input[name='CreatorUserId']").val());
            $("#creatorUserIdBySelect").change(function () {
                $("input[name='CreatorUserId']").val($("#creatorUserIdBySelect").val());
            })
            //处理人
            $("#ownerUserIdBySelect").val($("input[name='OwnerUserId']").val());
            $("#ownerUserIdBySelect").change(function () {
                $("input[name='OwnerUserId']").val($("#ownerUserIdBySelect").val());
            })
            //是否合格
            $("#auditStatusSelect").val($("input[name='AuditStatus']").val());
            $("#auditStatusSelect").change(function () {
                $("input[name='AuditStatus']").val($("#auditStatusSelect").val());
            })
            //创建日期
            var startDate = $("input[name='StartTime']").val(), endDate = $("input[name='EndTime']").val();
            $("#createdDaterangepicker").daterangepicker({
                timePicker: true,
                ranges: {
                    '最近7天': [moment().subtract(6, 'days'), moment()],
                    '最近30天': [moment().subtract(29, 'days'), moment()],
                    '这个月': [moment().startOf('month'), moment().endOf('month')],
                    '上个月': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
                },
                locale: {
                    format: 'YYYY/MM/DD HH:mm',
                    applyLabel: '确定',
                    cancelLabel: '取消',
                    daysOfWeek: ['日', '一', '二', '三', '四', '五', '六'],
                    monthNames: ['一月', '二月', '三月', '四月', '五月', '六月',
                        '七月', '八月', '九月', '十月', '十一月', '十二月'],
                    firstDay: 1,
                    customRangeLabel: "自定义范围"
                },
                startDate: startDate,
                endDate: endDate
            }, function (start, end, label) {
                $("input[name='StartTime']").val(start.format('YYYY/MM/DD HH:mm'));
                $("input[name='EndTime']").val(end.format('YYYY/MM/DD HH:mm'));

            });
            // 导出excel
            $("#btnExport").click(function () {
                if (!confirm("你确定导出当前数据吗？"))
                    return;
                var model = {
                    Keyword: $("input[name='Keyword']").val(),
                    Position: $("input[name='JobId']").val(),
                    CreatedBy: $("input[name='CreatorUserId']").val(),
                    HandledBy: $("input[name='OwnerUserId']").val(),
                    AuditStatus: $("input[name='AuditStatus']").val(),
                    StartedTime: $("input[name='StartTime']").val(),
                    EndedTime: $("input[name='EndTime']").val(),
                };
                var form = $("<form>");
                form.attr('style', 'display:none');
                form.attr('method', 'post');
                form.attr('action', '/Resume/Export');
                for (var element in model) {
                    var input = $('<input>');
                    input.attr('type', 'hidden');
                    input.attr('name', element);
                    input.attr('value', model[element]);
                    form.append(input);
                }
                $('body').append(form);
                form.submit();
                form.remove();
            })
        })


    </script>
}

